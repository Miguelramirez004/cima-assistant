import streamlit as st
import asyncio
import openai
import re
import os
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

# Configure page
st.set_page_config(page_title="CIMA Assistant", layout="wide")

# Simple CSS
st.markdown("""
<style>
    .main .block-container {padding-top: 2rem;}
    .stTabs [data-baseweb="tab-panel"] {padding-top: 1rem;}
    div.stButton > button:first-child {background-color: #4CAF50; color: white;}
    div.stButton > button:hover {background-color: #45a049;}
    
    .info-box {
        background-color: #2E7D32;
        border-left: 6px solid #1B5E20;
        padding: 10px;
        margin-bottom: 10px;
    }
</style>
""", unsafe_allow_html=True)

# Title
st.title("üß™ CIMA Assistant")
st.markdown("### *Sistema inteligente de consulta para formulaci√≥n magistral y CIMA*")

# Simple page to verify app is working
st.success("El sistema est√° funcionando correctamente.")
st.info("Se ha iniciado en modo de diagn√≥stico para garantizar estabilidad. Pronto estar√°n disponibles todas las funcionalidades.")

# Basic tab structure 
tab1, tab2, tab3 = st.tabs(["Formulaci√≥n Magistral", "Consultas CIMA", "Historial"])

with tab1:
    st.write("### Asistente para formulaci√≥n magistral basado en CIMA")
    st.markdown("""
    <div class="info-box">
    Ingrese su consulta sobre formulaci√≥n magistral. Especifique el principio activo, 
    concentraci√≥n deseada y tipo de formulaci√≥n para obtener mejores resultados.
    </div>
    """, unsafe_allow_html=True)
    
    query_fm = st.text_area(
        "Ingrese su consulta sobre formulaci√≥n:",
        height=100, 
        placeholder="Ejemplo: Suspensi√≥n de Ibuprofeno 100mg/ml para uso pedi√°trico",
        disabled=True
    )
    
    st.button("Consultar Formulaci√≥n", type="primary", disabled=True)

with tab2:
    st.write("### Chat con experto CIMA")
    st.markdown("""
    <div class="info-box">
    Realice consultas sobre medicamentos registrados en CIMA. 
    Puede preguntar sobre indicaciones, contraindicaciones, efectos adversos, etc.
    </div>
    """, unsafe_allow_html=True)
    
    st.text_area("Mensaje:", disabled=True)
    st.button("Enviar", disabled=True)

with tab3:
    st.header("Historial de formulaciones")
    st.info("El historial estar√° disponible pr√≥ximamente.")

# Display environment check information
st.subheader("Informaci√≥n de diagn√≥stico")

try:
    # Check OpenAI
    openai_api_key = os.getenv("OPENAI_API_KEY")
    openai_status = "‚úÖ API Key configurada" if openai_api_key else "‚ùå API Key no encontrada"
    st.write(f"OpenAI: {openai_status}")
    
    # Check event loop
    try:
        loop = asyncio.get_event_loop()
        loop_status = f"‚úÖ Event loop disponible ({loop})"
    except RuntimeError as e:
        loop_status = f"‚ùå Error de event loop: {str(e)}"
    st.write(f"AsyncIO: {loop_status}")
    
    # Check Python version
    import sys
    st.write(f"Python: {sys.version}")
    
    # Check libraries
    import pkg_resources
    libraries = ['streamlit', 'openai', 'aiohttp', 'python-dotenv', 'httpx', 'nest-asyncio']
    st.write("Librer√≠as instaladas:")
    for lib in libraries:
        try:
            version = pkg_resources.get_distribution(lib).version
            st.write(f"- {lib}: ‚úÖ v{version}")
        except pkg_resources.DistributionNotFound:
            st.write(f"- {lib}: ‚ùå No instalada")

except Exception as e:
    st.error(f"Error en diagn√≥stico: {str(e)}")

# Contacto e instrucciones
st.markdown("""
---
### Pr√≥ximos pasos
1. Verifique que todas las librer√≠as est√°n correctamente instaladas
2. Compruebe que la API Key de OpenAI est√° configurada en el archivo .env
3. Reinicie la aplicaci√≥n despu√©s de corregir cualquier problema detectado

Para restaurar todas las funcionalidades, por favor contacte al soporte t√©cnico.
""")
